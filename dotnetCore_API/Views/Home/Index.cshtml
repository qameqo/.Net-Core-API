@model dotnetCore_API.Models.IndexModel
@{
    Layout = null;
}

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.js" integrity="sha512-WNLxfP/8cVYL9sj8Jnp6et0BkubLP31jhTG9vhL/F5uEZmg5wEzKoXp1kJslzPQWwPT1eyMiSxlKCgzHLOTOTQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
</head>
<body>
    <div>
        <p>@string.Format("IP: {0}", Model.IP)</p>
        <p>@string.Format("Name: {0} : {1}", Model.AssemblyName, Model.Env)</p>
        <p>@string.Format("Version: {0} ({1})", Model.AssemblyVersion, Model.Modified)</p>
        @*data-id = id , data-guid = gu_id, value = name_eng || create function create element แล้วใช้ name_eng ไปตั้งชื่อ id ต่อท้าย *@
        @*<input type="file" id="imageFile" accept="image/*" multiple />
        <button id="truewallet">truewallet</button>
        <button id="creditcard">credit_card</button>
        <input type="text" name="field1" />
        <input type="text" name="field2" />
        <img src="" alt="Alternate Text" id="imgqr" />
        <div id="divdes"></div>
        <button id="btnGenQR">GenQR</button>
        <input type="checkbox" data-id="1" onchange="changeChkbox(this)" name="chk_b" value="ป่วย" />
        <input type="checkbox" data-id="2" onchange="changeChkbox(this)" name="chk_b" value="พักร้อน" />*@
        <input type="file" name="files" multiple />
        <button type="button" onclick="Test()">Upload</button>
    </div>
    <hr />
    <footer>
        <p>@DateTime.Now.ToString("yyyy") - @Model.AssemblyName</p>
        <script>
            $(document).ready(async function () {
                await GetTypeOfLeave();
            });
            var wallet = function () {
                GetCharge();
            };
            var credit = function () {
                SourceOmise();
            };
            var Gen = async function () {
                await Test();
            };

            //document.getElementById('truewallet').onclick = wallet;
            //document.getElementById('creditcard').onclick = credit;
            //document.getElementById('btnGenQR').onclick = Gen;

            function SourceOmise() { //credit
                var url = "api/Omise/PayCreditCard/";
                var obj = {};
                obj.exp_month = 2;
                obj.exp_year = 2025;
                obj.name = "JOHN DOE";
                obj.number = "4242424242424242";
                obj.security_code = "123";
                console.log(obj);
                $.post(url, JSON.stringify(obj), function (data, result) {
                    console.log(result, data);
                });
            }
            function GetCharge() { //truemoney
                var url = "api/Omise/PayTrueWallet/";
                $.post(url,null, function (data, result) {
                    console.log(result, data);
                    window.location.href = data;
                });
            }

            async function GetTypeOfLeave()
            {
                var url = "api/TypeLeave/GetTypeOfLeave";
                var token = await BuildToken();
                $.ajax({
                    type: "POST",
                    url: url,
                    contentType: 'application/json; charset=UTF-8',
                    beforeSend: function (xhr, settings) { xhr.setRequestHeader('Authorization', 'Bearer ' + token.token); }, //set tokenString before send
                    success: function (data, response) {
                        console.log(response, data);
                        var htmlChk = "";
                        for (var i = 0; i < data.data.length; i++) {
                            htmlChk += '<input type="checkbox" data-id="' + data.data[i].id + '" data-guid="' + data.data[i].gu_id + '" value= "' + data.data[i].name_th + '" onchange="changeChkbox(this)" name="chk_b" />';
                        }
                        $('div').append(htmlChk);
                        //var des = data.data[0].description.split(',');
                        //var html = "";
                        //$.each(des, function (i, d) {
                        //    html += "<p>" + d + "</p>";
                        //});
                        //$("#divdes").append(html);
                    },
                    failure: function (response) {
                        console.log(response.responseText);
                    },
                    error: function (response) {
                        console.log(response.responseText);
                    }
                });

            }

            async function GenQR() { //promptpay qr
                var url = "api/Omise/GenQR/";
                var obj = {};
                obj.amount = "10";
                var token = await BuildToken();
                console.log(token.token);
                $.ajax({
                    type: "POST",
                    url: url,
                    contentType: 'application/json; charset=UTF-8',
                    data: JSON.stringify(obj),
                    beforeSend: function (xhr, settings) { xhr.setRequestHeader('Authorization', 'Bearer ' + token.token); }, //set tokenString before send
                    success: function (data, response) {
                        console.log(response, data);
                        $("#imgqr").attr('src', data.data.result.path).css({
                            'height': '300px',
                            'width':'300px'
                        });
                    },
                    failure: function (response) {
                        console.log(response.responseText);
                    },
                    error: function (response) {
                        console.log(response.responseText);
                    }
                });
            }
            async function BuildToken() {
                var url = "api/Token/BuildToken";
                var obj = {};
                obj.Username = "qameqo";
                obj.Password = "qameqo";
                obj.Issuer = "qameqo";
                obj.Roles = "user";
                obj.ExpireMinutes = 3;
                var result = await PostData(url, obj);
                return result;

            }

            async function getImage() {
                var token = await BuildToken();
                var formData = new FormData();
                var files = document.querySelector('input[type=file]').files;
                for (var i = 0; i < files.length; i++) {
                    formData.append("Files", files[i]);
                }
                formData.append('create_by', "ทด");
                formData.append('id_leave', "a9c0e5ab-c29a-4f39-9843-3a0fe91ed97b");
                formData.append('field1', "dddddd");
                formData.append('field2', "sssss")
                $.ajax({
                    url: "api/Evidence/AddEvidence",
                    type: "POST",
                    data: formData,
                    contentType: false,
                    processData: false,
                    beforeSend: function (xhr, settings) { xhr.setRequestHeader('Authorization', 'Bearer ' + token.token); }, //set tokenString before send
                    success: function (response) {
                        console.log(response);
                    }
                });
            }
            async function Test() {
                var token = await BuildToken();
                var formData = new FormData();
                var files = document.querySelector('input[type=file]').files;
                var len = $('input:checkbox:checked'); //$('input[type=checkbox]');
                for (var i = 0; i < len.length; i++) { //data main
                    formData.append("model[" + i + "].startdate", "2023-04-08");
                    formData.append("model[" + i + "].enddate", "2023-04-08");
                    formData.append("model[" + i + "].gu_id", "e77facb6-4770-4114-90d9-13beb84cd9a9");
                    formData.append("model[" + i + "].starttime", "09:00");
                    formData.append("model[" + i + "].endtime", "18:00");
                    formData.append("model[" + i + "].id_emp", "emp5");
                    formData.append("model[" + i + "].id_type", $(len[i]).data('guid'));
                    for (var t = 0; t < files.length; t++) { //data file
                        formData.append("model["+ i +"].Files", files[t]);
                    }
                }
                
                $.ajax({
                    url: "api/Leave/ChangeLeaveInfo", //"api/Leave/AddListLeaveInfo"
                    type: "POST",
                    data: formData,
                    contentType: false,
                    processData: false,
                    beforeSend: function (xhr, settings) { xhr.setRequestHeader('Authorization', 'Bearer ' + token.token); }, //set tokenString before send
                    success: function (response) {
                        console.log(response);
                    }
                });
            }
            function changeChkbox(element) {
                console.log(element)
                if (element.checked) {
                    console.log("checked"); //function create element for please enter leave info by send data-id and value for set id element
                } else {
                    console.log("not checked"); //function remove element for please enter leave info
                }
            }

            function xhr_request_internal(_url, _datajson, type, _callback) {
                $.ajax({
                    type: type,
                    url: _url,
                    contentType: 'application/json; charset=UTF-8',
                    data: JSON.stringify(_datajson),
                    success: function (result) {
                        console.log(result);
                        // return result;
                        if (result != null || result != "") {
                            return _callback(result);
                        }
                        else {
                            return _callback(result);
                        }
                    },
                    error: function (response) {
                        alert("กรุณาลองใหม่อีกครั้ง..");
                    }
                });
            }
            async function PostData(_url, _datajson) {
                const result = await $.ajax({
                    type: "POST",
                    url: _url,
                    contentType: 'application/json; charset=UTF-8',
                    data: JSON.stringify(_datajson),
                    async: false
                });
                return result;
            }
            async function GetData(_url) {
                const result = await $.ajax({
                    type: "GET",
                    url: _url,
                    //contentType: 'application/json; charset=UTF-8',
                    async: false
                });
                return result;
            }
        </script>
    </footer>
</body>
</html>