#pragma checksum "C:\Users\Win10\source\repos\dotnetCore_API\dotnetCore_API\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4d1113cd1a65ac5a800e75856d1a4f7c5355a98f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4d1113cd1a65ac5a800e75856d1a4f7c5355a98f", @"/Views/Home/Index.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dotnetCore_API.Models.IndexModel>
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "C:\Users\Win10\source\repos\dotnetCore_API\dotnetCore_API\Views\Home\Index.cshtml"
  
    Layout = null;

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<!DOCTYPE html>\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4d1113cd1a65ac5a800e75856d1a4f7c5355a98f2963", async() => {
                WriteLiteral(@"
    <meta name=""viewport"" content=""width=device-width"" />
    <title>Index</title>
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.js"" integrity=""sha512-WNLxfP/8cVYL9sj8Jnp6et0BkubLP31jhTG9vhL/F5uEZmg5wEzKoXp1kJslzPQWwPT1eyMiSxlKCgzHLOTOTQ=="" crossorigin=""anonymous"" referrerpolicy=""no-referrer""></script>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4d1113cd1a65ac5a800e75856d1a4f7c5355a98f4277", async() => {
                WriteLiteral("\r\n    <div>\r\n        <p>");
#nullable restore
#line 15 "C:\Users\Win10\source\repos\dotnetCore_API\dotnetCore_API\Views\Home\Index.cshtml"
      Write(string.Format("IP: {0}", Model.IP));

#line default
#line hidden
#nullable disable
                WriteLiteral("</p>\r\n        <p>");
#nullable restore
#line 16 "C:\Users\Win10\source\repos\dotnetCore_API\dotnetCore_API\Views\Home\Index.cshtml"
      Write(string.Format("Name: {0} : {1}", Model.AssemblyName, Model.Env));

#line default
#line hidden
#nullable disable
                WriteLiteral("</p>\r\n        <p>");
#nullable restore
#line 17 "C:\Users\Win10\source\repos\dotnetCore_API\dotnetCore_API\Views\Home\Index.cshtml"
      Write(string.Format("Version: {0} ({1})", Model.AssemblyVersion, Model.Modified));

#line default
#line hidden
#nullable disable
                WriteLiteral("</p>\r\n");
                WriteLiteral("        <input type=\"file\" name=\"files\" multiple />\r\n        <button type=\"button\" onclick=\"Test()\">Upload</button>\r\n    </div>\r\n    <hr />\r\n    <footer>\r\n        <p>");
#nullable restore
#line 34 "C:\Users\Win10\source\repos\dotnetCore_API\dotnetCore_API\Views\Home\Index.cshtml"
      Write(DateTime.Now.ToString("yyyy"));

#line default
#line hidden
#nullable disable
                WriteLiteral(" - ");
#nullable restore
#line 34 "C:\Users\Win10\source\repos\dotnetCore_API\dotnetCore_API\Views\Home\Index.cshtml"
                                       Write(Model.AssemblyName);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"</p>
        <script>
            $(document).ready(async function () {
                await GetTypeOfLeave();
            });
            var wallet = function () {
                GetCharge();
            };
            var credit = function () {
                SourceOmise();
            };
            var Gen = async function () {
                await Test();
            };

            //document.getElementById('truewallet').onclick = wallet;
            //document.getElementById('creditcard').onclick = credit;
            //document.getElementById('btnGenQR').onclick = Gen;

            function SourceOmise() { //credit
                var url = ""api/Omise/PayCreditCard/"";
                var obj = {};
                obj.exp_month = 2;
                obj.exp_year = 2025;
                obj.name = ""JOHN DOE"";
                obj.number = ""4242424242424242"";
                obj.security_code = ""123"";
                console.log(obj);
                $.post(url, JSON.string");
                WriteLiteral(@"ify(obj), function (data, result) {
                    console.log(result, data);
                });
            }
            function GetCharge() { //truemoney
                var url = ""api/Omise/PayTrueWallet/"";
                $.post(url,null, function (data, result) {
                    console.log(result, data);
                    window.location.href = data;
                });
            }

            async function GetTypeOfLeave()
            {
                var url = ""api/TypeLeave/GetTypeOfLeave"";
                var token = await BuildToken();
                $.ajax({
                    type: ""POST"",
                    url: url,
                    contentType: 'application/json; charset=UTF-8',
                    beforeSend: function (xhr, settings) { xhr.setRequestHeader('Authorization', 'Bearer ' + token.token); }, //set tokenString before send
                    success: function (data, response) {
                        console.log(response, data);
      ");
                WriteLiteral(@"                  var htmlChk = """";
                        for (var i = 0; i < data.data.length; i++) {
                            htmlChk += '<input type=""checkbox"" data-id=""' + data.data[i].id + '"" data-guid=""' + data.data[i].gu_id + '"" value= ""' + data.data[i].name_th + '"" onchange=""changeChkbox(this)"" name=""chk_b"" />';
                        }
                        $('div').append(htmlChk);
                        //var des = data.data[0].description.split(',');
                        //var html = """";
                        //$.each(des, function (i, d) {
                        //    html += ""<p>"" + d + ""</p>"";
                        //});
                        //$(""#divdes"").append(html);
                    },
                    failure: function (response) {
                        console.log(response.responseText);
                    },
                    error: function (response) {
                        console.log(response.responseText);
                    }
    ");
                WriteLiteral(@"            });

            }

            async function GenQR() { //promptpay qr
                var url = ""api/Omise/GenQR/"";
                var obj = {};
                obj.amount = ""10"";
                var token = await BuildToken();
                console.log(token.token);
                $.ajax({
                    type: ""POST"",
                    url: url,
                    contentType: 'application/json; charset=UTF-8',
                    data: JSON.stringify(obj),
                    beforeSend: function (xhr, settings) { xhr.setRequestHeader('Authorization', 'Bearer ' + token.token); }, //set tokenString before send
                    success: function (data, response) {
                        console.log(response, data);
                        $(""#imgqr"").attr('src', data.data.result.path).css({
                            'height': '300px',
                            'width':'300px'
                        });
                    },
                    failure");
                WriteLiteral(@": function (response) {
                        console.log(response.responseText);
                    },
                    error: function (response) {
                        console.log(response.responseText);
                    }
                });
            }
            async function BuildToken() {
                var url = ""api/Token/BuildToken"";
                var obj = {};
                obj.Username = ""qameqo"";
                obj.Password = ""qameqo"";
                obj.Issuer = ""qameqo"";
                obj.Roles = ""user"";
                obj.ExpireMinutes = 3;
                var result = await PostData(url, obj);
                return result;

            }

            async function getImage() {
                var token = await BuildToken();
                var formData = new FormData();
                var files = document.querySelector('input[type=file]').files;
                for (var i = 0; i < files.length; i++) {
                    formData.append(");
                WriteLiteral(@"""Files"", files[i]);
                }
                formData.append('create_by', ""ทด"");
                formData.append('id_leave', ""a9c0e5ab-c29a-4f39-9843-3a0fe91ed97b"");
                formData.append('field1', ""dddddd"");
                formData.append('field2', ""sssss"")
                $.ajax({
                    url: ""api/Evidence/AddEvidence"",
                    type: ""POST"",
                    data: formData,
                    contentType: false,
                    processData: false,
                    beforeSend: function (xhr, settings) { xhr.setRequestHeader('Authorization', 'Bearer ' + token.token); }, //set tokenString before send
                    success: function (response) {
                        console.log(response);
                    }
                });
            }
            async function Test() {
                var token = await BuildToken();
                var formData = new FormData();
                var files = document.querySelector('inp");
                WriteLiteral(@"ut[type=file]').files;
                var len = $('input:checkbox:checked'); //$('input[type=checkbox]');
                for (var i = 0; i < len.length; i++) { //data main
                    formData.append(""model["" + i + ""].startdate"", ""2023-04-07"");
                    formData.append(""model["" + i + ""].enddate"", ""2023-04-07"");
                    formData.append(""model["" + i + ""].gu_id"", ""28f9b1d7-169e-4e02-96c4-62479a21451b"");
                    formData.append(""model["" + i + ""].starttime"", ""09:00"");
                    formData.append(""model["" + i + ""].endtime"", ""18:00"");
                    formData.append(""model["" + i + ""].id_emp"", ""emp5"");
                    formData.append(""model["" + i + ""].id_type"", $(len[i]).data('guid'));
                    for (var t = 0; t < files.length; t++) { //data file
                        formData.append(""model[""+ i +""].Files"", files[t]);
                    }
                }
                
                $.ajax({
                    url: ""api/");
                WriteLiteral(@"Leave/ChangeLeaveInfo"", //""api/Leave/AddListLeaveInfo""
                    type: ""POST"",
                    data: formData,
                    contentType: false,
                    processData: false,
                    beforeSend: function (xhr, settings) { xhr.setRequestHeader('Authorization', 'Bearer ' + token.token); }, //set tokenString before send
                    success: function (response) {
                        console.log(response);
                    }
                });
            }
            function changeChkbox(element) {
                console.log(element)
                if (element.checked) {
                    console.log(""checked""); //function create element for please enter leave info by send data-id and value for set id element
                } else {
                    console.log(""not checked""); //function remove element for please enter leave info
                }
            }

            function xhr_request_internal(_url, _datajson, type, ");
                WriteLiteral(@"_callback) {
                $.ajax({
                    type: type,
                    url: _url,
                    contentType: 'application/json; charset=UTF-8',
                    data: JSON.stringify(_datajson),
                    success: function (result) {
                        console.log(result);
                        // return result;
                        if (result != null || result != """") {
                            return _callback(result);
                        }
                        else {
                            return _callback(result);
                        }
                    },
                    error: function (response) {
                        alert(""กรุณาลองใหม่อีกครั้ง.."");
                    }
                });
            }
            async function PostData(_url, _datajson) {
                const result = await $.ajax({
                    type: ""POST"",
                    url: _url,
                    contentType: 'app");
                WriteLiteral(@"lication/json; charset=UTF-8',
                    data: JSON.stringify(_datajson),
                    async: false
                });
                return result;
            }
            async function GetData(_url) {
                const result = await $.ajax({
                    type: ""GET"",
                    url: _url,
                    //contentType: 'application/json; charset=UTF-8',
                    async: false
                });
                return result;
            }
        </script>
    </footer>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dotnetCore_API.Models.IndexModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
